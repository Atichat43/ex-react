[2019-08-15]
Notes: ! Support mutiple state & Implement Effect react hook
Ideas: // Array, index & If change call callback func 
TODO: 

Activity Log:
[√] Revise React & useState
[√] Add new func useEffect
======================================================
-= TestCase =-
[javascript]
app = React.render(MyComponent)
app.click()
app = React.render(MyComponent)
app = React.render(MyComponent)
app.type('boss')
app = React.render(MyComponent)
[end]

# Expect: 
-> changed
-> count: 1, text: 'default name'
-> changed
-> count: 2, text: 'default name'
-> count: 2, text: 'default name'
-> changed
-> count: 2, text: 'boss'

[2019-08-14]
Notes: ! Create react hook from scratch
Ideas: // Closure for state
TODO:
[√] React function
[√] MyComponent
======================================================
-= TestCase =-
[javascript]
app = React.render(MyComponent)
app.click()
app = React.render(MyComponent)
app.click()
[end]

# Expect: increment
-> 1
-> 2
======================================================
-= Planning =-
// React
- useState() return [state, setState]
- render(Component) return Component.render()
- constructor return { useState, render }

// MyComponent
- use React.useState
- contructor return object with render, click
